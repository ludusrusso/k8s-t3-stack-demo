/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecGrpcHealthCheck } from './comGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecGrpcHealthCheck';
import { ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttp2HealthCheck } from './comGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttp2HealthCheck';
import { ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpHealthCheck } from './comGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpHealthCheck';
import { ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpsHealthCheck } from './comGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpsHealthCheck';
import { ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecLogConfig } from './comGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecLogConfig';
import { ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecSslHealthCheck } from './comGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecSslHealthCheck';
import { ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecTcpHealthCheck } from './comGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecTcpHealthCheck';

export class ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpec {
    /**
    * How often (in seconds) to send a health check. The default value is 5 seconds.
    */
    'checkIntervalSec'?: number;
    /**
    * An optional description of this resource. Provide this property when you create the resource.
    */
    'description'?: string;
    'grpcHealthCheck'?: ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecGrpcHealthCheck;
    /**
    * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
    */
    'healthyThreshold'?: number;
    'http2HealthCheck'?: ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttp2HealthCheck;
    'httpHealthCheck'?: ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpHealthCheck;
    'httpsHealthCheck'?: ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpsHealthCheck;
    /**
    * Location represents the geographical location of the ComputeHealthCheck. Specify a region name or \"global\" for global resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)
    */
    'location': string;
    'logConfig'?: ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecLogConfig;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    'sslHealthCheck'?: ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecSslHealthCheck;
    'tcpHealthCheck'?: ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecTcpHealthCheck;
    /**
    * How long (in seconds) to wait before claiming failure. The default value is 5 seconds.  It is invalid for timeoutSec to have greater value than checkIntervalSec.
    */
    'timeoutSec'?: number;
    /**
    * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
    */
    'unhealthyThreshold'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "checkIntervalSec",
            "baseName": "checkIntervalSec",
            "type": "number"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "grpcHealthCheck",
            "baseName": "grpcHealthCheck",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecGrpcHealthCheck"
        },
        {
            "name": "healthyThreshold",
            "baseName": "healthyThreshold",
            "type": "number"
        },
        {
            "name": "http2HealthCheck",
            "baseName": "http2HealthCheck",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttp2HealthCheck"
        },
        {
            "name": "httpHealthCheck",
            "baseName": "httpHealthCheck",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpHealthCheck"
        },
        {
            "name": "httpsHealthCheck",
            "baseName": "httpsHealthCheck",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecHttpsHealthCheck"
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "string"
        },
        {
            "name": "logConfig",
            "baseName": "logConfig",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecLogConfig"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "sslHealthCheck",
            "baseName": "sslHealthCheck",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecSslHealthCheck"
        },
        {
            "name": "tcpHealthCheck",
            "baseName": "tcpHealthCheck",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpecTcpHealthCheck"
        },
        {
            "name": "timeoutSec",
            "baseName": "timeoutSec",
            "type": "number"
        },
        {
            "name": "unhealthyThreshold",
            "baseName": "unhealthyThreshold",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmComputeV1beta1ComputeHealthCheckSpec.attributeTypeMap;
    }
}

