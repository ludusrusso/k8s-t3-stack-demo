/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerRouteRulesInnerMatchRulesInnerHeaderMatchesInnerRangeMatch } from './comGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerRouteRulesInnerMatchRulesInnerHeaderMatchesInnerRangeMatch';

export class ComGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerRouteRulesInnerMatchRulesInnerHeaderMatchesInner {
    /**
    * The value should exactly match contents of exactMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
    */
    'exactMatch'?: string;
    /**
    * The name of the HTTP header to match. For matching against the HTTP request\'s authority, use a headerMatch with the header name \":authority\". For matching a request\'s method, use the headerName \":method\".
    */
    'headerName': string;
    /**
    * If set to false, the headerMatch is considered a match if the match criteria above are met. If set to true, the headerMatch is considered a match if the match criteria above are NOT met. Defaults to false.
    */
    'invertMatch'?: boolean;
    /**
    * The value of the header must start with the contents of prefixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
    */
    'prefixMatch'?: string;
    /**
    * A header with the contents of headerName must exist. The match takes place whether or not the request\'s header has a value or not. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
    */
    'presentMatch'?: boolean;
    'rangeMatch'?: ComGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerRouteRulesInnerMatchRulesInnerHeaderMatchesInnerRangeMatch;
    /**
    * The value of the header must match the regular expression specified in regexMatch. For regular expression grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript  For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header\'s port specifier. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
    */
    'regexMatch'?: string;
    /**
    * The value of the header must end with the contents of suffixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
    */
    'suffixMatch'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "exactMatch",
            "baseName": "exactMatch",
            "type": "string"
        },
        {
            "name": "headerName",
            "baseName": "headerName",
            "type": "string"
        },
        {
            "name": "invertMatch",
            "baseName": "invertMatch",
            "type": "boolean"
        },
        {
            "name": "prefixMatch",
            "baseName": "prefixMatch",
            "type": "string"
        },
        {
            "name": "presentMatch",
            "baseName": "presentMatch",
            "type": "boolean"
        },
        {
            "name": "rangeMatch",
            "baseName": "rangeMatch",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerRouteRulesInnerMatchRulesInnerHeaderMatchesInnerRangeMatch"
        },
        {
            "name": "regexMatch",
            "baseName": "regexMatch",
            "type": "string"
        },
        {
            "name": "suffixMatch",
            "baseName": "suffixMatch",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerRouteRulesInnerMatchRulesInnerHeaderMatchesInner.attributeTypeMap;
    }
}

