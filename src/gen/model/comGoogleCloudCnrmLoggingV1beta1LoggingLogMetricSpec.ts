/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecBucketOptions } from './comGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecBucketOptions';
import { ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecMetricDescriptor } from './comGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecMetricDescriptor';
import { ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecProjectRef } from './comGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecProjectRef';

export class ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpec {
    'bucketOptions'?: ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecBucketOptions;
    /**
    * Optional. A description of this metric, which is used in documentation. The maximum length of the description is 8000 characters.
    */
    'description'?: string;
    /**
    * Optional. If set to True, then this metric is disabled and it does not generate any points.
    */
    'disabled'?: boolean;
    /**
    * Required. An [advanced logs filter](https://cloud.google.com/logging/docs/view/advanced_filters) which is used to match log entries. Example: \"resource.type=gae_app AND severity>=ERROR\" The maximum length of the filter is 20000 characters.
    */
    'filter': string;
    /**
    * Optional. A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the `value_extractor` field. The extracted value is converted to the type defined in the label descriptor. If the either the extraction or the type conversion fails, the label will have a default value. The default value for a string label is an empty string, for an integer label its 0, and for a boolean label its `false`. Note that there are upper bounds on the maximum number of labels and the number of active time series that are allowed in a project.
    */
    'labelExtractors'?: { [key: string]: string; };
    'metricDescriptor'?: ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecMetricDescriptor;
    'projectRef': ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecProjectRef;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    /**
    * Optional. A `value_extractor` is required when using a distribution logs-based metric to extract the values to record from a log entry. Two functions are supported for value extraction: `EXTRACT(field)` or `REGEXP_EXTRACT(field, regex)`. The argument are: 1. field: The name of the log entry field from which the value is to be extracted. 2. regex: A regular expression using the Google RE2 syntax (https://github.com/google/re2/wiki/Syntax) with a single capture group to extract data from the specified log entry field. The value of the field is converted to a string before applying the regex. It is an error to specify a regex that does not include exactly one capture group. The result of the extraction must be convertible to a double type, as the distribution always records double values. If either the extraction or the conversion to double fails, then those values are not recorded in the distribution. Example: `REGEXP_EXTRACT(jsonPayload.request, \".*quantity=(d+).*\")`
    */
    'valueExtractor'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "bucketOptions",
            "baseName": "bucketOptions",
            "type": "ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecBucketOptions"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "disabled",
            "baseName": "disabled",
            "type": "boolean"
        },
        {
            "name": "filter",
            "baseName": "filter",
            "type": "string"
        },
        {
            "name": "labelExtractors",
            "baseName": "labelExtractors",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "metricDescriptor",
            "baseName": "metricDescriptor",
            "type": "ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecMetricDescriptor"
        },
        {
            "name": "projectRef",
            "baseName": "projectRef",
            "type": "ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpecProjectRef"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "valueExtractor",
            "baseName": "valueExtractor",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmLoggingV1beta1LoggingLogMetricSpec.attributeTypeMap;
    }
}

