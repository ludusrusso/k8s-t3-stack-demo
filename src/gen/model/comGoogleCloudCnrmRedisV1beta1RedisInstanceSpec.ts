/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecAuthorizedNetworkRef } from './comGoogleCloudCnrmRedisV1beta1RedisInstanceSpecAuthorizedNetworkRef';
import { ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenancePolicy } from './comGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenancePolicy';
import { ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenanceSchedule } from './comGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenanceSchedule';

export class ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpec {
    /**
    * Immutable. Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two zones. If provided, it must be a different zone from the one provided in [locationId].
    */
    'alternativeLocationId'?: string;
    /**
    * Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to \"true\" AUTH is enabled on the instance. Default value is \"false\" meaning AUTH is disabled.
    */
    'authEnabled'?: boolean;
    /**
    * AUTH String set on the instance. This field will only be populated if auth_enabled is true.
    */
    'authString'?: string;
    'authorizedNetworkRef'?: ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecAuthorizedNetworkRef;
    /**
    * Immutable. The connection mode of the Redis instance. Default value: \"DIRECT_PEERING\" Possible values: [\"DIRECT_PEERING\", \"PRIVATE_SERVICE_ACCESS\"].
    */
    'connectMode'?: string;
    /**
    * An arbitrary and optional user-provided name for the instance.
    */
    'displayName'?: string;
    /**
    * Immutable. The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If [alternativeLocationId] is also provided, it must be different from [locationId].
    */
    'locationId'?: string;
    'maintenancePolicy'?: ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenancePolicy;
    'maintenanceSchedule'?: ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenanceSchedule;
    /**
    * Redis memory size in GiB.
    */
    'memorySizeGb': number;
    /**
    * Optional. Read replica mode. Can only be specified when trying to create the instance. If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be provided and the  instance cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED: If enabled, read endpoint will be provided and the instance  can scale up and down the number of replicas. Possible values: [\"READ_REPLICAS_DISABLED\", \"READ_REPLICAS_ENABLED\"].
    */
    'readReplicasMode'?: string;
    /**
    * Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for the list of supported parameters: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs.
    */
    'redisConfigs'?: { [key: string]: string; };
    /**
    * The version of Redis software. If not provided, latest supported version will be used. Please check the API documentation linked  at the top for the latest valid values.
    */
    'redisVersion'?: string;
    /**
    * Immutable. The name of the Redis region of the instance.
    */
    'region': string;
    /**
    * Optional. The number of replica nodes. The valid range for the Standard Tier with  read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1.  The valid value for basic tier is 0 and the default is also 0.
    */
    'replicaCount'?: number;
    /**
    * Immutable. The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing subnets in an authorized network.
    */
    'reservedIpRange'?: string;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    /**
    * Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or \"auto\". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address  range associated with the private service access connection, or \"auto\".
    */
    'secondaryIpRange'?: string;
    /**
    * Immutable. The service tier of the instance. Must be one of these values:  - BASIC: standalone instance - STANDARD_HA: highly available primary/replica instances Default value: \"BASIC\" Possible values: [\"BASIC\", \"STANDARD_HA\"].
    */
    'tier'?: string;
    /**
    * Immutable. The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.  - SERVER_AUTHENTICATION: Client to Server traffic encryption enabled with server authentication Default value: \"DISABLED\" Possible values: [\"SERVER_AUTHENTICATION\", \"DISABLED\"].
    */
    'transitEncryptionMode'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "alternativeLocationId",
            "baseName": "alternativeLocationId",
            "type": "string"
        },
        {
            "name": "authEnabled",
            "baseName": "authEnabled",
            "type": "boolean"
        },
        {
            "name": "authString",
            "baseName": "authString",
            "type": "string"
        },
        {
            "name": "authorizedNetworkRef",
            "baseName": "authorizedNetworkRef",
            "type": "ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecAuthorizedNetworkRef"
        },
        {
            "name": "connectMode",
            "baseName": "connectMode",
            "type": "string"
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string"
        },
        {
            "name": "locationId",
            "baseName": "locationId",
            "type": "string"
        },
        {
            "name": "maintenancePolicy",
            "baseName": "maintenancePolicy",
            "type": "ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenancePolicy"
        },
        {
            "name": "maintenanceSchedule",
            "baseName": "maintenanceSchedule",
            "type": "ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpecMaintenanceSchedule"
        },
        {
            "name": "memorySizeGb",
            "baseName": "memorySizeGb",
            "type": "number"
        },
        {
            "name": "readReplicasMode",
            "baseName": "readReplicasMode",
            "type": "string"
        },
        {
            "name": "redisConfigs",
            "baseName": "redisConfigs",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "redisVersion",
            "baseName": "redisVersion",
            "type": "string"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string"
        },
        {
            "name": "replicaCount",
            "baseName": "replicaCount",
            "type": "number"
        },
        {
            "name": "reservedIpRange",
            "baseName": "reservedIpRange",
            "type": "string"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "secondaryIpRange",
            "baseName": "secondaryIpRange",
            "type": "string"
        },
        {
            "name": "tier",
            "baseName": "tier",
            "type": "string"
        },
        {
            "name": "transitEncryptionMode",
            "baseName": "transitEncryptionMode",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmRedisV1beta1RedisInstanceSpec.attributeTypeMap;
    }
}

