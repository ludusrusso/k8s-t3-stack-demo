/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudV1BackendConfigSpecCdnBypassCacheOnRequestHeadersInner } from './comGoogleCloudV1BackendConfigSpecCdnBypassCacheOnRequestHeadersInner';
import { ComGoogleCloudV1BackendConfigSpecCdnCachePolicy } from './comGoogleCloudV1BackendConfigSpecCdnCachePolicy';
import { ComGoogleCloudV1BackendConfigSpecCdnNegativeCachingPolicyInner } from './comGoogleCloudV1BackendConfigSpecCdnNegativeCachingPolicyInner';
import { ComGoogleCloudV1BackendConfigSpecCdnSignedUrlKeysInner } from './comGoogleCloudV1BackendConfigSpecCdnSignedUrlKeysInner';

/**
* CDNConfig contains configuration for CDN-enabled backends.
*/
export class ComGoogleCloudV1BackendConfigSpecCdn {
    'bypassCacheOnRequestHeaders'?: Array<ComGoogleCloudV1BackendConfigSpecCdnBypassCacheOnRequestHeadersInner>;
    'cacheMode'?: string;
    'cachePolicy'?: ComGoogleCloudV1BackendConfigSpecCdnCachePolicy;
    'clientTtl'?: number;
    'defaultTtl'?: number;
    'enabled': boolean;
    'maxTtl'?: number;
    'negativeCaching'?: boolean;
    'negativeCachingPolicy'?: Array<ComGoogleCloudV1BackendConfigSpecCdnNegativeCachingPolicyInner>;
    'requestCoalescing'?: boolean;
    'serveWhileStale'?: number;
    'signedUrlCacheMaxAgeSec'?: number;
    'signedUrlKeys'?: Array<ComGoogleCloudV1BackendConfigSpecCdnSignedUrlKeysInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "bypassCacheOnRequestHeaders",
            "baseName": "bypassCacheOnRequestHeaders",
            "type": "Array<ComGoogleCloudV1BackendConfigSpecCdnBypassCacheOnRequestHeadersInner>"
        },
        {
            "name": "cacheMode",
            "baseName": "cacheMode",
            "type": "string"
        },
        {
            "name": "cachePolicy",
            "baseName": "cachePolicy",
            "type": "ComGoogleCloudV1BackendConfigSpecCdnCachePolicy"
        },
        {
            "name": "clientTtl",
            "baseName": "clientTtl",
            "type": "number"
        },
        {
            "name": "defaultTtl",
            "baseName": "defaultTtl",
            "type": "number"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean"
        },
        {
            "name": "maxTtl",
            "baseName": "maxTtl",
            "type": "number"
        },
        {
            "name": "negativeCaching",
            "baseName": "negativeCaching",
            "type": "boolean"
        },
        {
            "name": "negativeCachingPolicy",
            "baseName": "negativeCachingPolicy",
            "type": "Array<ComGoogleCloudV1BackendConfigSpecCdnNegativeCachingPolicyInner>"
        },
        {
            "name": "requestCoalescing",
            "baseName": "requestCoalescing",
            "type": "boolean"
        },
        {
            "name": "serveWhileStale",
            "baseName": "serveWhileStale",
            "type": "number"
        },
        {
            "name": "signedUrlCacheMaxAgeSec",
            "baseName": "signedUrlCacheMaxAgeSec",
            "type": "number"
        },
        {
            "name": "signedUrlKeys",
            "baseName": "signedUrlKeys",
            "type": "Array<ComGoogleCloudV1BackendConfigSpecCdnSignedUrlKeysInner>"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudV1BackendConfigSpecCdn.attributeTypeMap;
    }
}

