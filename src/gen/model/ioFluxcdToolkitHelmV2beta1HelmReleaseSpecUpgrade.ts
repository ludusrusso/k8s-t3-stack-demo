/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation } from './ioFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation';

/**
* Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
*/
export class IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgrade {
    /**
    * CleanupOnFail allows deletion of new resources created during the Helm upgrade action when it fails.
    */
    'cleanupOnFail'?: boolean;
    /**
    * CRDs upgrade CRDs from the Helm Chart\'s crds directory according to the CRD upgrade policy provided here. Valid values are `Skip`, `Create` or `CreateReplace`. Default is `Skip` and if omitted CRDs are neither installed nor upgraded.   Skip: do neither install nor replace (update) any CRDs.   Create: new CRDs are created, existing CRDs are neither updated nor deleted.   CreateReplace: new CRDs are created, existing CRDs are updated (replaced) but not deleted.   By default, CRDs are not applied during Helm upgrade action. With this option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
    */
    'crds'?: IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgrade.CrdsEnum;
    /**
    * DisableHooks prevents hooks from running during the Helm upgrade action.
    */
    'disableHooks'?: boolean;
    /**
    * DisableOpenAPIValidation prevents the Helm upgrade action from validating rendered templates against the Kubernetes OpenAPI Schema.
    */
    'disableOpenAPIValidation'?: boolean;
    /**
    * DisableWait disables the waiting for resources to be ready after a Helm upgrade has been performed.
    */
    'disableWait'?: boolean;
    /**
    * DisableWaitForJobs disables waiting for jobs to complete after a Helm upgrade has been performed.
    */
    'disableWaitForJobs'?: boolean;
    /**
    * Force forces resource updates through a replacement strategy.
    */
    'force'?: boolean;
    /**
    * PreserveValues will make Helm reuse the last release\'s values and merge in overrides from \'Values\'. Setting this flag makes the HelmRelease non-declarative.
    */
    'preserveValues'?: boolean;
    'remediation'?: IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation;
    /**
    * Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm upgrade action. Defaults to \'HelmReleaseSpec.Timeout\'.
    */
    'timeout'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "cleanupOnFail",
            "baseName": "cleanupOnFail",
            "type": "boolean"
        },
        {
            "name": "crds",
            "baseName": "crds",
            "type": "IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgrade.CrdsEnum"
        },
        {
            "name": "disableHooks",
            "baseName": "disableHooks",
            "type": "boolean"
        },
        {
            "name": "disableOpenAPIValidation",
            "baseName": "disableOpenAPIValidation",
            "type": "boolean"
        },
        {
            "name": "disableWait",
            "baseName": "disableWait",
            "type": "boolean"
        },
        {
            "name": "disableWaitForJobs",
            "baseName": "disableWaitForJobs",
            "type": "boolean"
        },
        {
            "name": "force",
            "baseName": "force",
            "type": "boolean"
        },
        {
            "name": "preserveValues",
            "baseName": "preserveValues",
            "type": "boolean"
        },
        {
            "name": "remediation",
            "baseName": "remediation",
            "type": "IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation"
        },
        {
            "name": "timeout",
            "baseName": "timeout",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgrade.attributeTypeMap;
    }
}

export namespace IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgrade {
    export enum CrdsEnum {
        Skip = <any> 'Skip',
        Create = <any> 'Create',
        CreateReplace = <any> 'CreateReplace'
    }
}
