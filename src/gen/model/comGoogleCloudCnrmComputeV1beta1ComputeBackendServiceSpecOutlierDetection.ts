/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionBaseEjectionTime } from './comGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionBaseEjectionTime';
import { ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionInterval } from './comGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionInterval';

/**
* Settings controlling eviction of unhealthy hosts from the load balancing pool. This field is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
*/
export class ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetection {
    'baseEjectionTime'?: ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionBaseEjectionTime;
    /**
    * Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error. Defaults to 5.
    */
    'consecutiveErrors'?: number;
    /**
    * The number of consecutive gateway failures (502, 503, 504 status or connection errors that are mapped to one of those status codes) before a consecutive gateway failure ejection occurs. Defaults to 5.
    */
    'consecutiveGatewayFailure'?: number;
    /**
    * The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive 5xx. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
    */
    'enforcingConsecutiveErrors'?: number;
    /**
    * The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive gateway failures. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 0.
    */
    'enforcingConsecutiveGatewayFailure'?: number;
    /**
    * The percentage chance that a host will be actually ejected when an outlier status is detected through success rate statistics. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
    */
    'enforcingSuccessRate'?: number;
    'interval'?: ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionInterval;
    /**
    * Maximum percentage of hosts in the load balancing pool for the backend service that can be ejected. Defaults to 10%.
    */
    'maxEjectionPercent'?: number;
    /**
    * The number of hosts in a cluster that must have enough request volume to detect success rate outliers. If the number of hosts is less than this setting, outlier detection via success rate statistics is not performed for any host in the cluster. Defaults to 5.
    */
    'successRateMinimumHosts'?: number;
    /**
    * The minimum number of total requests that must be collected in one interval (as defined by the interval duration above) to include this host in success rate based outlier detection. If the volume is lower than this setting, outlier detection via success rate statistics is not performed for that host. Defaults to 100.
    */
    'successRateRequestVolume'?: number;
    /**
    * This factor is used to determine the ejection threshold for success rate outlier ejection. The ejection threshold is the difference between the mean success rate, and the product of this factor and the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided by a thousand to get a double. That is, if the desired factor is 1.9, the runtime value should be 1900. Defaults to 1900.
    */
    'successRateStdevFactor'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "baseEjectionTime",
            "baseName": "baseEjectionTime",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionBaseEjectionTime"
        },
        {
            "name": "consecutiveErrors",
            "baseName": "consecutiveErrors",
            "type": "number"
        },
        {
            "name": "consecutiveGatewayFailure",
            "baseName": "consecutiveGatewayFailure",
            "type": "number"
        },
        {
            "name": "enforcingConsecutiveErrors",
            "baseName": "enforcingConsecutiveErrors",
            "type": "number"
        },
        {
            "name": "enforcingConsecutiveGatewayFailure",
            "baseName": "enforcingConsecutiveGatewayFailure",
            "type": "number"
        },
        {
            "name": "enforcingSuccessRate",
            "baseName": "enforcingSuccessRate",
            "type": "number"
        },
        {
            "name": "interval",
            "baseName": "interval",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetectionInterval"
        },
        {
            "name": "maxEjectionPercent",
            "baseName": "maxEjectionPercent",
            "type": "number"
        },
        {
            "name": "successRateMinimumHosts",
            "baseName": "successRateMinimumHosts",
            "type": "number"
        },
        {
            "name": "successRateRequestVolume",
            "baseName": "successRateRequestVolume",
            "type": "number"
        },
        {
            "name": "successRateStdevFactor",
            "baseName": "successRateStdevFactor",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmComputeV1beta1ComputeBackendServiceSpecOutlierDetection.attributeTypeMap;
    }
}

