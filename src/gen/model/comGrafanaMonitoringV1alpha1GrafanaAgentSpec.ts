/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecAffinity } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecAffinity';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecApiServer } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecApiServer';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInner } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInner';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInnerVolumeMountsInner } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInnerVolumeMountsInner';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecImagePullSecretsInner } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecImagePullSecretsInner';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecIntegrations } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecIntegrations';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecLogs } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecLogs';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecMetrics } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecMetrics';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecPodMetadata } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecPodMetadata';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecResources } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecResources';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecSecurityContext } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecSecurityContext';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecStorage } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecStorage';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecTolerationsInner } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecTolerationsInner';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecTopologySpreadConstraintsInner } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecTopologySpreadConstraintsInner';
import { ComGrafanaMonitoringV1alpha1GrafanaAgentSpecVolumesInner } from './comGrafanaMonitoringV1alpha1GrafanaAgentSpecVolumesInner';

/**
* Spec holds the specification of the desired behavior for the Grafana Agent cluster.
*/
export class ComGrafanaMonitoringV1alpha1GrafanaAgentSpec {
    'affinity'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecAffinity;
    'apiServer'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecApiServer;
    /**
    * ConfigMaps is a liset of config maps in the same namespace as the GrafanaAgent object which will be mounted into each running Grafana Agent pod. The ConfigMaps are mounted into /etc/grafana-agent/extra-configmaps/<configmap-name>.
    */
    'configMaps'?: Array<string>;
    /**
    * Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a Grafana Agent pod or to change the behavior of an operator-generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `grafana-agent` and `config-reloader`. Overriding containers is entirely outside the scope of what the Grafana Agent team will support and by doing so, you accept that this behavior may break at any time without notice.
    */
    'containers'?: Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInner>;
    /**
    * enableConfigReadAPI enables the read API for viewing currently running config port 8080 on the agent.
    */
    'enableConfigReadAPI'?: boolean;
    /**
    * Image, when specified, overrides the image used to run the Agent. It should be specified along with a tag. Version must still be set to ensure the Grafana Agent Operator knows which version of Grafana Agent is being configured.
    */
    'image'?: string;
    /**
    * ImagePullSecrets holds an optional list of references to secrets within the same namespace to use for pulling the Grafana Agent image from registries. More info: https://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
    */
    'imagePullSecrets'?: Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecImagePullSecretsInner>;
    /**
    * InitContainers allows adding initContainers to the pod definition. These can be used to, for example, fetch secrets for injection into the Grafana Agent configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other than secret fetching is entirely outside the scope of what the Grafana Agent maintainers will support and by doing so, you accept that this behavior may break at any time without notice.
    */
    'initContainers'?: Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInner>;
    'integrations'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecIntegrations;
    /**
    * LogFormat controls the logging format of the generated pods. Defaults to \"logfmt\" if not set.
    */
    'logFormat'?: string;
    /**
    * LogLevel controls the log level of the generated pods. Defaults to \"info\" if not set.
    */
    'logLevel'?: string;
    'logs'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecLogs;
    'metrics'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecMetrics;
    /**
    * NodeSelector defines which nodes pods should be scheduling on.
    */
    'nodeSelector'?: { [key: string]: string; };
    /**
    * Paused prevents actions except for deletion to be performed on the underlying managed objects.
    */
    'paused'?: boolean;
    'podMetadata'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecPodMetadata;
    /**
    * Port name used for the pods and governing service. This defaults to agent-metrics.
    */
    'portName'?: string;
    /**
    * PriorityClassName is the priority class assigned to pods.
    */
    'priorityClassName'?: string;
    'resources'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecResources;
    /**
    * Secrets is a list of secrets in the same namespace as the GrafanaAgent object which will be mounted into each running Grafana Agent pod. The secrets are mounted into /etc/grafana-agent/extra-secrets/<secret-name>.
    */
    'secrets'?: Array<string>;
    'securityContext'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecSecurityContext;
    /**
    * ServiceAccountName is the name of the ServiceAccount to use for running Grafana Agent pods.
    */
    'serviceAccountName'?: string;
    'storage'?: ComGrafanaMonitoringV1alpha1GrafanaAgentSpecStorage;
    /**
    * Tolerations, if specified, controls the pod\'s tolerations.
    */
    'tolerations'?: Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecTolerationsInner>;
    /**
    * TopologySpreadConstraints, if specified, controls the pod\'s topology spread constraints.
    */
    'topologySpreadConstraints'?: Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecTopologySpreadConstraintsInner>;
    /**
    * Version of Grafana Agent to be deployed.
    */
    'version'?: string;
    /**
    * VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumEMounts specified will be appended to other VolumeMounts in the Grafana Agent container that are generated as a result of StorageSpec objects.
    */
    'volumeMounts'?: Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInnerVolumeMountsInner>;
    /**
    * Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
    */
    'volumes'?: Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecVolumesInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "affinity",
            "baseName": "affinity",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecAffinity"
        },
        {
            "name": "apiServer",
            "baseName": "apiServer",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecApiServer"
        },
        {
            "name": "configMaps",
            "baseName": "configMaps",
            "type": "Array<string>"
        },
        {
            "name": "containers",
            "baseName": "containers",
            "type": "Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInner>"
        },
        {
            "name": "enableConfigReadAPI",
            "baseName": "enableConfigReadAPI",
            "type": "boolean"
        },
        {
            "name": "image",
            "baseName": "image",
            "type": "string"
        },
        {
            "name": "imagePullSecrets",
            "baseName": "imagePullSecrets",
            "type": "Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecImagePullSecretsInner>"
        },
        {
            "name": "initContainers",
            "baseName": "initContainers",
            "type": "Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInner>"
        },
        {
            "name": "integrations",
            "baseName": "integrations",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecIntegrations"
        },
        {
            "name": "logFormat",
            "baseName": "logFormat",
            "type": "string"
        },
        {
            "name": "logLevel",
            "baseName": "logLevel",
            "type": "string"
        },
        {
            "name": "logs",
            "baseName": "logs",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecLogs"
        },
        {
            "name": "metrics",
            "baseName": "metrics",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecMetrics"
        },
        {
            "name": "nodeSelector",
            "baseName": "nodeSelector",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "paused",
            "baseName": "paused",
            "type": "boolean"
        },
        {
            "name": "podMetadata",
            "baseName": "podMetadata",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecPodMetadata"
        },
        {
            "name": "portName",
            "baseName": "portName",
            "type": "string"
        },
        {
            "name": "priorityClassName",
            "baseName": "priorityClassName",
            "type": "string"
        },
        {
            "name": "resources",
            "baseName": "resources",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecResources"
        },
        {
            "name": "secrets",
            "baseName": "secrets",
            "type": "Array<string>"
        },
        {
            "name": "securityContext",
            "baseName": "securityContext",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecSecurityContext"
        },
        {
            "name": "serviceAccountName",
            "baseName": "serviceAccountName",
            "type": "string"
        },
        {
            "name": "storage",
            "baseName": "storage",
            "type": "ComGrafanaMonitoringV1alpha1GrafanaAgentSpecStorage"
        },
        {
            "name": "tolerations",
            "baseName": "tolerations",
            "type": "Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecTolerationsInner>"
        },
        {
            "name": "topologySpreadConstraints",
            "baseName": "topologySpreadConstraints",
            "type": "Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecTopologySpreadConstraintsInner>"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string"
        },
        {
            "name": "volumeMounts",
            "baseName": "volumeMounts",
            "type": "Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecContainersInnerVolumeMountsInner>"
        },
        {
            "name": "volumes",
            "baseName": "volumes",
            "type": "Array<ComGrafanaMonitoringV1alpha1GrafanaAgentSpecVolumesInner>"
        }    ];

    static getAttributeTypeMap() {
        return ComGrafanaMonitoringV1alpha1GrafanaAgentSpec.attributeTypeMap;
    }
}

