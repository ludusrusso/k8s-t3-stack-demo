/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecDeadLetterPolicy } from './comGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecDeadLetterPolicy';
import { ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecExpirationPolicy } from './comGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecExpirationPolicy';
import { ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecPushConfig } from './comGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecPushConfig';
import { ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecRetryPolicy } from './comGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecRetryPolicy';
import { ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecTopicRef } from './comGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecTopicRef';

export class ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpec {
    /**
    * This value is the maximum time after a subscriber receives a message before the subscriber should acknowledge the message. After message delivery but before the ack deadline expires and before the message is acknowledged, it is an outstanding message and will not be delivered again during that time (on a best-effort basis).  For pull subscriptions, this value is used as the initial value for the ack deadline. To override this value for a given message, call subscriptions.modifyAckDeadline with the corresponding ackId if using pull. The minimum custom deadline you can specify is 10 seconds. The maximum custom deadline you can specify is 600 seconds (10 minutes). If this parameter is 0, a default value of 10 seconds is used.  For push delivery, this value is also used to set the request timeout for the call to the push endpoint.  If the subscriber never acknowledges the message, the Pub/Sub system will eventually redeliver the message.
    */
    'ackDeadlineSeconds'?: number;
    'deadLetterPolicy'?: ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecDeadLetterPolicy;
    /**
    * Immutable. If \'true\', Pub/Sub provides the following guarantees for the delivery of a message with a given value of messageId on this Subscriptions\':  - The message sent to a subscriber is guaranteed not to be resent before the message\'s acknowledgement deadline expires.  - An acknowledged message will not be resent to a subscriber.  Note that subscribers may still receive multiple copies of a message when \'enable_exactly_once_delivery\' is true if the message was published multiple times by a publisher client. These copies are considered distinct by Pub/Sub and have distinct messageId values.
    */
    'enableExactlyOnceDelivery'?: boolean;
    /**
    * Immutable. If \'true\', messages published with the same orderingKey in PubsubMessage will be delivered to the subscribers in the order in which they are received by the Pub/Sub system. Otherwise, they may be delivered in any order.
    */
    'enableMessageOrdering'?: boolean;
    'expirationPolicy'?: ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecExpirationPolicy;
    /**
    * Immutable. The subscription only delivers the messages that match the filter.  Pub/Sub automatically acknowledges the messages that don\'t match the filter. You can filter messages by their attributes. The maximum length of a filter is 256 bytes. After creating the subscription,  you can\'t modify the filter.
    */
    'filter'?: string;
    /**
    * How long to retain unacknowledged messages in the subscription\'s backlog, from the moment a message is published. If retain_acked_messages is true, then this also configures the retention of acknowledged messages, and thus configures how far back in time a subscriptions.seek can be done. Defaults to 7 days. Cannot be more than 7 days (\'\"604800s\"\') or less than 10 minutes (\'\"600s\"\').  A duration in seconds with up to nine fractional digits, terminated by \'s\'. Example: \'\"600.5s\"\'.
    */
    'messageRetentionDuration'?: string;
    'pushConfig'?: ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecPushConfig;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    /**
    * Indicates whether to retain acknowledged messages. If \'true\', then messages are not expunged from the subscription\'s backlog, even if they are acknowledged, until they fall out of the messageRetentionDuration window.
    */
    'retainAckedMessages'?: boolean;
    'retryPolicy'?: ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecRetryPolicy;
    'topicRef': ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecTopicRef;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "ackDeadlineSeconds",
            "baseName": "ackDeadlineSeconds",
            "type": "number"
        },
        {
            "name": "deadLetterPolicy",
            "baseName": "deadLetterPolicy",
            "type": "ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecDeadLetterPolicy"
        },
        {
            "name": "enableExactlyOnceDelivery",
            "baseName": "enableExactlyOnceDelivery",
            "type": "boolean"
        },
        {
            "name": "enableMessageOrdering",
            "baseName": "enableMessageOrdering",
            "type": "boolean"
        },
        {
            "name": "expirationPolicy",
            "baseName": "expirationPolicy",
            "type": "ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecExpirationPolicy"
        },
        {
            "name": "filter",
            "baseName": "filter",
            "type": "string"
        },
        {
            "name": "messageRetentionDuration",
            "baseName": "messageRetentionDuration",
            "type": "string"
        },
        {
            "name": "pushConfig",
            "baseName": "pushConfig",
            "type": "ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecPushConfig"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "retainAckedMessages",
            "baseName": "retainAckedMessages",
            "type": "boolean"
        },
        {
            "name": "retryPolicy",
            "baseName": "retryPolicy",
            "type": "ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecRetryPolicy"
        },
        {
            "name": "topicRef",
            "baseName": "topicRef",
            "type": "ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpecTopicRef"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmPubsubV1beta1PubSubSubscriptionSpec.attributeTypeMap;
    }
}

