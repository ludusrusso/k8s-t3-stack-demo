/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* ConfigConnectorSpec defines the desired state of ConfigConnector
*/
export class ComGoogleCloudCnrmCoreV1beta1ConfigConnectorSpec {
    /**
    * The Kubernetes secret that contains the Google Service Account Key\'s credentials to be used by ConfigConnector to authenticate with Google Cloud APIs. This field is used only when in cluster mode. It\'s recommended to use `googleServiceAccount` when running ConfigConnector in Google Kubernetes Engine (GKE) clusters with Workload Identity enabled. This field cannot be specified together with `googleServiceAccount`.
    */
    'credentialSecretName'?: string;
    /**
    * The Google Service Account to be used by Config Connector to authenticate with Google Cloud APIs. This field is used only when running in cluster mode with Workload Identity enabled. See Google Kubernetes Engine (GKE) workload-identity (https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) for details. This field cannot be specified together with `credentialSecretName`. For namespaced mode, use `googleServiceAccount` in ConfigConnectorContext CRD to specify the Google Service Account to be used to authenticate with Google Cloud APIs per namespace.
    */
    'googleServiceAccount'?: string;
    /**
    * The mode that Config Connector will run in. This can be either \'cluster\' or \'namespaced\'. The default is \'namespaced\'. Cluster mode uses a single Google Service Account to create and manage resources, even if you are using Config Connector to manage multiple Projects. You must specify either `credentialSecretName` or `googleServiceAccount` when in cluster mode, but not both. Namespaced mode allows you to use different Google service accounts for different Projects. When in namespaced mode, you must create a ConfigConnectorContext object per namespace that you want to enable Config Connector in, and each must set `googleServiceAccount` to specify the Google Service Account to be used to authenticate with Google Cloud APIs for the namespace.
    */
    'mode'?: ComGoogleCloudCnrmCoreV1beta1ConfigConnectorSpec.ModeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "credentialSecretName",
            "baseName": "credentialSecretName",
            "type": "string"
        },
        {
            "name": "googleServiceAccount",
            "baseName": "googleServiceAccount",
            "type": "string"
        },
        {
            "name": "mode",
            "baseName": "mode",
            "type": "ComGoogleCloudCnrmCoreV1beta1ConfigConnectorSpec.ModeEnum"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmCoreV1beta1ConfigConnectorSpec.attributeTypeMap;
    }
}

export namespace ComGoogleCloudCnrmCoreV1beta1ConfigConnectorSpec {
    export enum ModeEnum {
        Cluster = <any> 'cluster',
        Namespaced = <any> 'namespaced'
    }
}
