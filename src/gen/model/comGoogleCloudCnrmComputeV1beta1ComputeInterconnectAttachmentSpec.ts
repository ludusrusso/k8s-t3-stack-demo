/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecIpsecInternalAddressesInner } from './comGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecIpsecInternalAddressesInner';
import { ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecRouterRef } from './comGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecRouterRef';

export class ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpec {
    /**
    * Whether the VLAN attachment is enabled or disabled.  When using PARTNER type this will Pre-Activate the interconnect attachment.
    */
    'adminEnabled'?: boolean;
    /**
    * Provisioned bandwidth capacity for the interconnect attachment. For attachments of type DEDICATED, the user can set the bandwidth. For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth. Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED, Defaults to BPS_10G Possible values: [\"BPS_50M\", \"BPS_100M\", \"BPS_200M\", \"BPS_300M\", \"BPS_400M\", \"BPS_500M\", \"BPS_1G\", \"BPS_2G\", \"BPS_5G\", \"BPS_10G\", \"BPS_20G\", \"BPS_50G\"].
    */
    'bandwidth'?: string;
    /**
    * Immutable. Up to 16 candidate prefixes that can be used to restrict the allocation of cloudRouterIpAddress and customerRouterIpAddress for this attachment. All prefixes must be within link-local address space (169.254.0.0/16) and must be /29 or shorter (/28, /27, etc). Google will attempt to select an unused /29 from the supplied candidate prefix(es). The request will fail if all possible /29s are in use on Google\'s edge. If not supplied, Google will randomly select an unused /29 from all of link-local space.
    */
    'candidateSubnets'?: Array<string>;
    /**
    * An optional description of this resource.
    */
    'description'?: string;
    /**
    * Immutable. Desired availability domain for the attachment. Only available for type PARTNER, at creation time. For improved reliability, customers should configure a pair of attachments with one per availability domain. The selected availability domain will be provided to the Partner via the pairing key so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
    */
    'edgeAvailabilityDomain'?: string;
    /**
    * Immutable. Indicates the user-supplied encryption option of this interconnect attachment:  NONE is the default value, which means that the attachment carries unencrypted traffic. VMs can send traffic to, or receive traffic from, this type of attachment.  IPSEC indicates that the attachment carries only traffic encrypted by an IPsec device such as an HA VPN gateway. VMs cannot directly send traffic to, or receive traffic from, such an attachment. To use IPsec-encrypted Cloud Interconnect create the attachment using this option.  Not currently available publicly. Default value: \"NONE\" Possible values: [\"NONE\", \"IPSEC\"].
    */
    'encryption'?: string;
    /**
    * Immutable. URL of the underlying Interconnect object that this attachment\'s traffic will traverse through. Required if type is DEDICATED, must not be set if type is PARTNER.
    */
    'interconnect'?: string;
    'ipsecInternalAddresses'?: Array<ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecIpsecInternalAddressesInner>;
    /**
    * Maximum Transmission Unit (MTU), in bytes, of packets passing through this interconnect attachment. Currently, only 1440 and 1500 are allowed. If not specified, the value will default to 1440.
    */
    'mtu'?: string;
    /**
    * Region where the regional interconnect attachment resides.
    */
    'region': string;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    'routerRef': ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecRouterRef;
    /**
    * Immutable. The type of InterconnectAttachment you wish to create. Defaults to DEDICATED. Possible values: [\"DEDICATED\", \"PARTNER\", \"PARTNER_PROVIDER\"].
    */
    'type'?: string;
    /**
    * Immutable. The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When using PARTNER type this will be managed upstream.
    */
    'vlanTag8021q'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "adminEnabled",
            "baseName": "adminEnabled",
            "type": "boolean"
        },
        {
            "name": "bandwidth",
            "baseName": "bandwidth",
            "type": "string"
        },
        {
            "name": "candidateSubnets",
            "baseName": "candidateSubnets",
            "type": "Array<string>"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "edgeAvailabilityDomain",
            "baseName": "edgeAvailabilityDomain",
            "type": "string"
        },
        {
            "name": "encryption",
            "baseName": "encryption",
            "type": "string"
        },
        {
            "name": "interconnect",
            "baseName": "interconnect",
            "type": "string"
        },
        {
            "name": "ipsecInternalAddresses",
            "baseName": "ipsecInternalAddresses",
            "type": "Array<ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecIpsecInternalAddressesInner>"
        },
        {
            "name": "mtu",
            "baseName": "mtu",
            "type": "string"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "routerRef",
            "baseName": "routerRef",
            "type": "ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpecRouterRef"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "vlanTag8021q",
            "baseName": "vlanTag8021q",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmComputeV1beta1ComputeInterconnectAttachmentSpec.attributeTypeMap;
    }
}

