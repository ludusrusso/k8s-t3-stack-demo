/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Remediation holds the remediation configuration for when the Helm upgrade action for the HelmRelease fails. The default is to not perform any action.
*/
export class IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation {
    /**
    * IgnoreTestFailures tells the controller to skip remediation when the Helm tests are run after an upgrade action but fail. Defaults to \'Test.IgnoreFailures\'.
    */
    'ignoreTestFailures'?: boolean;
    /**
    * RemediateLastFailure tells the controller to remediate the last failure, when no retries remain. Defaults to \'false\' unless \'Retries\' is greater than 0.
    */
    'remediateLastFailure'?: boolean;
    /**
    * Retries is the number of retries that should be attempted on failures before bailing. Remediation, using \'Strategy\', is performed between each attempt. Defaults to \'0\', a negative integer equals to unlimited retries.
    */
    'retries'?: number;
    /**
    * Strategy to use for failure remediation. Defaults to \'rollback\'.
    */
    'strategy'?: IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation.StrategyEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "ignoreTestFailures",
            "baseName": "ignoreTestFailures",
            "type": "boolean"
        },
        {
            "name": "remediateLastFailure",
            "baseName": "remediateLastFailure",
            "type": "boolean"
        },
        {
            "name": "retries",
            "baseName": "retries",
            "type": "number"
        },
        {
            "name": "strategy",
            "baseName": "strategy",
            "type": "IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation.StrategyEnum"
        }    ];

    static getAttributeTypeMap() {
        return IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation.attributeTypeMap;
    }
}

export namespace IoFluxcdToolkitHelmV2beta1HelmReleaseSpecUpgradeRemediation {
    export enum StrategyEnum {
        Rollback = <any> 'rollback',
        Uninstall = <any> 'uninstall'
    }
}
