/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelStatusConditionsInner } from './comGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelStatusConditionsInner';
import { ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatusNodesInner } from './comGoogleCloudCnrmRedisV1beta1RedisInstanceStatusNodesInner';
import { ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatusServerCaCertsInner } from './comGoogleCloudCnrmRedisV1beta1RedisInstanceStatusServerCaCertsInner';

export class ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatus {
    /**
    * Conditions represent the latest available observation of the resource\'s current state.
    */
    'conditions'?: Array<ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelStatusConditionsInner>;
    /**
    * The time the instance was created in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds.
    */
    'createTime'?: string;
    /**
    * The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or [alternativeLocationId] and can change after a failover event.
    */
    'currentLocationId'?: string;
    /**
    * Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
    */
    'host'?: string;
    /**
    * Output only. Info per node.
    */
    'nodes'?: Array<ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatusNodesInner>;
    /**
    * ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    */
    'observedGeneration'?: number;
    /**
    * Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is \"serviceAccount:\". The value may change over time for a given instance so should be checked before each import/export operation.
    */
    'persistenceIamIdentity'?: string;
    /**
    * The port number of the exposed Redis endpoint.
    */
    'port'?: number;
    /**
    * Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target \'host\'.
    */
    'readEndpoint'?: string;
    /**
    * Output only. The port number of the exposed readonly redis endpoint. Standard tier only.  Write requests should target \'port\'.
    */
    'readEndpointPort'?: number;
    /**
    * List of server CA certificates for the instance.
    */
    'serverCaCerts'?: Array<ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatusServerCaCertsInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelStatusConditionsInner>"
        },
        {
            "name": "createTime",
            "baseName": "createTime",
            "type": "string"
        },
        {
            "name": "currentLocationId",
            "baseName": "currentLocationId",
            "type": "string"
        },
        {
            "name": "host",
            "baseName": "host",
            "type": "string"
        },
        {
            "name": "nodes",
            "baseName": "nodes",
            "type": "Array<ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatusNodesInner>"
        },
        {
            "name": "observedGeneration",
            "baseName": "observedGeneration",
            "type": "number"
        },
        {
            "name": "persistenceIamIdentity",
            "baseName": "persistenceIamIdentity",
            "type": "string"
        },
        {
            "name": "port",
            "baseName": "port",
            "type": "number"
        },
        {
            "name": "readEndpoint",
            "baseName": "readEndpoint",
            "type": "string"
        },
        {
            "name": "readEndpointPort",
            "baseName": "readEndpointPort",
            "type": "number"
        },
        {
            "name": "serverCaCerts",
            "baseName": "serverCaCerts",
            "type": "Array<ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatusServerCaCertsInner>"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmRedisV1beta1RedisInstanceStatus.attributeTypeMap;
    }
}

