/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComCoreosMonitoringV1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner } from './comCoreosMonitoringV1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner';
import { ComGrafanaMonitoringV1alpha1PodLogsSpecNamespaceSelector } from './comGrafanaMonitoringV1alpha1PodLogsSpecNamespaceSelector';
import { ComGrafanaMonitoringV1alpha1PodLogsSpecPipelineStagesInner } from './comGrafanaMonitoringV1alpha1PodLogsSpecPipelineStagesInner';
import { ComGrafanaMonitoringV1alpha1PodLogsSpecSelector } from './comGrafanaMonitoringV1alpha1PodLogsSpecSelector';

/**
* Spec holds the specification of the desired behavior for the PodLogs.
*/
export class ComGrafanaMonitoringV1alpha1PodLogsSpec {
    /**
    * The label to use to retrieve the job name from.
    */
    'jobLabel'?: string;
    'namespaceSelector'?: ComGrafanaMonitoringV1alpha1PodLogsSpecNamespaceSelector;
    /**
    * Pipeline stages for this pod. Pipeline stages allow for transforming and filtering log lines.
    */
    'pipelineStages'?: Array<ComGrafanaMonitoringV1alpha1PodLogsSpecPipelineStagesInner>;
    /**
    * PodTargetLabels transfers labels on the Kubernetes Pod onto the target.
    */
    'podTargetLabels'?: Array<string>;
    /**
    * RelabelConfigs to apply to logs before delivering. Grafana Agent Operator automatically adds relabelings for a few standard Kubernetes fields and replaces original scrape job name with __tmp_logs_job_name.   More info: https://grafana.com/docs/loki/latest/clients/promtail/configuration/#relabel_configs
    */
    'relabelings'?: Array<ComCoreosMonitoringV1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner>;
    'selector': ComGrafanaMonitoringV1alpha1PodLogsSpecSelector;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "jobLabel",
            "baseName": "jobLabel",
            "type": "string"
        },
        {
            "name": "namespaceSelector",
            "baseName": "namespaceSelector",
            "type": "ComGrafanaMonitoringV1alpha1PodLogsSpecNamespaceSelector"
        },
        {
            "name": "pipelineStages",
            "baseName": "pipelineStages",
            "type": "Array<ComGrafanaMonitoringV1alpha1PodLogsSpecPipelineStagesInner>"
        },
        {
            "name": "podTargetLabels",
            "baseName": "podTargetLabels",
            "type": "Array<string>"
        },
        {
            "name": "relabelings",
            "baseName": "relabelings",
            "type": "Array<ComCoreosMonitoringV1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner>"
        },
        {
            "name": "selector",
            "baseName": "selector",
            "type": "ComGrafanaMonitoringV1alpha1PodLogsSpecSelector"
        }    ];

    static getAttributeTypeMap() {
        return ComGrafanaMonitoringV1alpha1PodLogsSpec.attributeTypeMap;
    }
}

