/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecAccessPolicyRef } from './comGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecAccessPolicyRef';
import { ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecSpec } from './comGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecSpec';
import { ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecStatus } from './comGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecStatus';

export class ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpec {
    'accessPolicyRef': ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecAccessPolicyRef;
    /**
    * Description of the ServicePerimeter and its use. Does not affect behavior.
    */
    'description'?: string;
    /**
    * Immutable. Specifies the type of the Perimeter. There are two types: regular and bridge. Regular Service Perimeter contains resources, access levels, and restricted services. Every resource can be in at most ONE regular Service Perimeter.  In addition to being in a regular service perimeter, a resource can also be in zero or more perimeter bridges. A perimeter bridge only contains resources. Cross project operations are permitted if all effected resources share some perimeter (whether bridge or regular). Perimeter Bridge does not contain access levels or services: those are governed entirely by the regular perimeter that resource is in.  Perimeter Bridges are typically useful when building more complex topologies with many independent perimeters that need to share some data with a common perimeter, but should not be able to share data among themselves. Default value: \"PERIMETER_TYPE_REGULAR\" Possible values: [\"PERIMETER_TYPE_REGULAR\", \"PERIMETER_TYPE_BRIDGE\"].
    */
    'perimeterType'?: string;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    'spec'?: ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecSpec;
    'status'?: ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecStatus;
    /**
    * Human readable title. Must be unique within the Policy.
    */
    'title': string;
    /**
    * Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists for all Service Perimeters, and that spec is identical to the status for those Service Perimeters. When this flag is set, it inhibits the generation of the implicit spec, thereby allowing the user to explicitly provide a configuration (\"spec\") to use in a dry-run version of the Service Perimeter. This allows the user to test changes to the enforced config (\"status\") without actually enforcing them. This testing is done through analyzing the differences between currently enforced and suggested restrictions. useExplicitDryRunSpec must bet set to True if any of the fields in the spec are set to non-default values.
    */
    'useExplicitDryRunSpec'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accessPolicyRef",
            "baseName": "accessPolicyRef",
            "type": "ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecAccessPolicyRef"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "perimeterType",
            "baseName": "perimeterType",
            "type": "string"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "spec",
            "baseName": "spec",
            "type": "ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecSpec"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpecStatus"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "useExplicitDryRunSpec",
            "baseName": "useExplicitDryRunSpec",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerServicePerimeterSpec.attributeTypeMap;
    }
}

