/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmSqlV1beta1SQLInstanceSpecReplicaConfigurationPassword } from './comGoogleCloudCnrmSqlV1beta1SQLInstanceSpecReplicaConfigurationPassword';

/**
* The configuration for replication.
*/
export class ComGoogleCloudCnrmSqlV1beta1SQLInstanceSpecReplicaConfiguration {
    /**
    * Immutable. PEM representation of the trusted CA\'s x509 certificate.
    */
    'caCertificate'?: string;
    /**
    * Immutable. PEM representation of the replica\'s x509 certificate.
    */
    'clientCertificate'?: string;
    /**
    * Immutable. PEM representation of the replica\'s private key. The corresponding public key in encoded in the client_certificate.
    */
    'clientKey'?: string;
    /**
    * Immutable. The number of seconds between connect retries.
    */
    'connectRetryInterval'?: number;
    /**
    * Immutable. Path to a SQL file in Google Cloud Storage from which replica instances are created. Format is gs://bucket/filename.
    */
    'dumpFilePath'?: string;
    /**
    * Immutable. Specifies if the replica is the failover target. If the field is set to true the replica will be designated as a failover replica. If the master instance fails, the replica instance will be promoted as the new master instance.
    */
    'failoverTarget'?: boolean;
    /**
    * Immutable. Time in ms between replication heartbeats.
    */
    'masterHeartbeatPeriod'?: number;
    'password'?: ComGoogleCloudCnrmSqlV1beta1SQLInstanceSpecReplicaConfigurationPassword;
    /**
    * Immutable. Permissible ciphers for use in SSL encryption.
    */
    'sslCipher'?: string;
    /**
    * Immutable. Username for replication connection.
    */
    'username'?: string;
    /**
    * Immutable. True if the master\'s common name value is checked during the SSL handshake.
    */
    'verifyServerCertificate'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "caCertificate",
            "baseName": "caCertificate",
            "type": "string"
        },
        {
            "name": "clientCertificate",
            "baseName": "clientCertificate",
            "type": "string"
        },
        {
            "name": "clientKey",
            "baseName": "clientKey",
            "type": "string"
        },
        {
            "name": "connectRetryInterval",
            "baseName": "connectRetryInterval",
            "type": "number"
        },
        {
            "name": "dumpFilePath",
            "baseName": "dumpFilePath",
            "type": "string"
        },
        {
            "name": "failoverTarget",
            "baseName": "failoverTarget",
            "type": "boolean"
        },
        {
            "name": "masterHeartbeatPeriod",
            "baseName": "masterHeartbeatPeriod",
            "type": "number"
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "ComGoogleCloudCnrmSqlV1beta1SQLInstanceSpecReplicaConfigurationPassword"
        },
        {
            "name": "sslCipher",
            "baseName": "sslCipher",
            "type": "string"
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string"
        },
        {
            "name": "verifyServerCertificate",
            "baseName": "verifyServerCertificate",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmSqlV1beta1SQLInstanceSpecReplicaConfiguration.attributeTypeMap;
    }
}

