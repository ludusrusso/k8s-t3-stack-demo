/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecDatasetRef } from './comGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecDatasetRef';
import { ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecEncryptionConfiguration } from './comGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecEncryptionConfiguration';
import { ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecExternalDataConfiguration } from './comGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecExternalDataConfiguration';
import { ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecMaterializedView } from './comGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecMaterializedView';
import { ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecRangePartitioning } from './comGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecRangePartitioning';
import { ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecTimePartitioning } from './comGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecTimePartitioning';
import { ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecView } from './comGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecView';

export class ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpec {
    /**
    * Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in descending priority order.
    */
    'clustering'?: Array<string>;
    'datasetRef': ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecDatasetRef;
    /**
    * The field description.
    */
    'description'?: string;
    'encryptionConfiguration'?: ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecEncryptionConfiguration;
    /**
    * The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.
    */
    'expirationTime'?: number;
    'externalDataConfiguration'?: ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecExternalDataConfiguration;
    /**
    * A descriptive name for the table.
    */
    'friendlyName'?: string;
    'materializedView'?: ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecMaterializedView;
    'rangePartitioning'?: ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecRangePartitioning;
    /**
    * Immutable. Optional. The tableId of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    /**
    * A JSON schema for the table.
    */
    'schema'?: string;
    'timePartitioning'?: ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecTimePartitioning;
    'view'?: ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecView;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "clustering",
            "baseName": "clustering",
            "type": "Array<string>"
        },
        {
            "name": "datasetRef",
            "baseName": "datasetRef",
            "type": "ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecDatasetRef"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "encryptionConfiguration",
            "baseName": "encryptionConfiguration",
            "type": "ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecEncryptionConfiguration"
        },
        {
            "name": "expirationTime",
            "baseName": "expirationTime",
            "type": "number"
        },
        {
            "name": "externalDataConfiguration",
            "baseName": "externalDataConfiguration",
            "type": "ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecExternalDataConfiguration"
        },
        {
            "name": "friendlyName",
            "baseName": "friendlyName",
            "type": "string"
        },
        {
            "name": "materializedView",
            "baseName": "materializedView",
            "type": "ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecMaterializedView"
        },
        {
            "name": "rangePartitioning",
            "baseName": "rangePartitioning",
            "type": "ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecRangePartitioning"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "schema",
            "baseName": "schema",
            "type": "string"
        },
        {
            "name": "timePartitioning",
            "baseName": "timePartitioning",
            "type": "ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecTimePartitioning"
        },
        {
            "name": "view",
            "baseName": "view",
            "type": "ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpecView"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmBigqueryV1beta1BigQueryTableSpec.attributeTypeMap;
    }
}

