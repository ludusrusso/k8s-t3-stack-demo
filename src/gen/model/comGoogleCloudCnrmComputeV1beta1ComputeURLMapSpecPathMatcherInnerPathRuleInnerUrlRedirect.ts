/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* When a path pattern is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set.
*/
export class ComGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerPathRuleInnerUrlRedirect {
    /**
    * The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.
    */
    'hostRedirect'?: string;
    /**
    * If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.
    */
    'httpsRedirect'?: boolean;
    /**
    * The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.
    */
    'pathRedirect'?: string;
    /**
    * The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request. prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.
    */
    'prefixRedirect'?: string;
    /**
    * The HTTP Status code to use for this RedirectAction. Supported values are:  * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.  * FOUND, which corresponds to 302.  * SEE_OTHER which corresponds to 303.  * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.  * PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained. Possible values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"].
    */
    'redirectResponseCode'?: string;
    /**
    * If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.  This field is required to ensure an empty block is not set. The normal default value is false.
    */
    'stripQuery': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "hostRedirect",
            "baseName": "hostRedirect",
            "type": "string"
        },
        {
            "name": "httpsRedirect",
            "baseName": "httpsRedirect",
            "type": "boolean"
        },
        {
            "name": "pathRedirect",
            "baseName": "pathRedirect",
            "type": "string"
        },
        {
            "name": "prefixRedirect",
            "baseName": "prefixRedirect",
            "type": "string"
        },
        {
            "name": "redirectResponseCode",
            "baseName": "redirectResponseCode",
            "type": "string"
        },
        {
            "name": "stripQuery",
            "baseName": "stripQuery",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmComputeV1beta1ComputeURLMapSpecPathMatcherInnerPathRuleInnerUrlRedirect.attributeTypeMap;
    }
}

