/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerDevicePolicy } from './comGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerDevicePolicy';
import { ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerMembersInner } from './comGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerMembersInner';
import { ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerRequiredAccessLevelsInner } from './comGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerRequiredAccessLevelsInner';

export class ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInner {
    'devicePolicy'?: ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerDevicePolicy;
    /**
    * A list of CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for a CIDR IP address block, the specified IP address portion must be properly truncated (i.e. all the host bits must be zero) or the input is considered malformed. For example, \"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is not. Similarly, for IPv6, \"2001:db8::/32\" is accepted whereas \"2001:db8::1/32\" is not. The originating IP of a request must be in one of the listed subnets in order for this Condition to be true. If empty, all IP addresses are allowed.
    */
    'ipSubnetworks'?: Array<string>;
    'members'?: Array<ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerMembersInner>;
    /**
    * Whether to negate the Condition. If true, the Condition becomes a NAND over its non-empty fields, each field must be false for the Condition overall to be satisfied. Defaults to false.
    */
    'negate'?: boolean;
    /**
    * The request must originate from one of the provided countries/regions. Format: A valid ISO 3166-1 alpha-2 code.
    */
    'regions'?: Array<string>;
    'requiredAccessLevels'?: Array<ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerRequiredAccessLevelsInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "devicePolicy",
            "baseName": "devicePolicy",
            "type": "ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerDevicePolicy"
        },
        {
            "name": "ipSubnetworks",
            "baseName": "ipSubnetworks",
            "type": "Array<string>"
        },
        {
            "name": "members",
            "baseName": "members",
            "type": "Array<ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerMembersInner>"
        },
        {
            "name": "negate",
            "baseName": "negate",
            "type": "boolean"
        },
        {
            "name": "regions",
            "baseName": "regions",
            "type": "Array<string>"
        },
        {
            "name": "requiredAccessLevels",
            "baseName": "requiredAccessLevels",
            "type": "Array<ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInnerRequiredAccessLevelsInner>"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmAccesscontextmanagerV1beta1AccessContextManagerAccessLevelSpecBasicConditionsInner.attributeTypeMap;
    }
}

