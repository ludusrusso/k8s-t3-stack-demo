/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmBinaryauthorizationV1beta1BinaryAuthorizationAttestorSpecProjectRef } from './comGoogleCloudCnrmBinaryauthorizationV1beta1BinaryAuthorizationAttestorSpecProjectRef';
import { ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecGatewaysInner } from './comGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecGatewaysInner';
import { ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecMeshesInner } from './comGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecMeshesInner';
import { ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecRulesInner } from './comGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecRulesInner';

export class ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpec {
    /**
    * Optional. A free-text description of the resource. Max length 1024 characters.
    */
    'description'?: string;
    'gateways'?: Array<ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecGatewaysInner>;
    /**
    * Required. Service hostnames with an optional port for which this route describes traffic. Format: [:] Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: - IPs are not allowed. - A hostname may be prefixed with a wildcard label (*.). The wildcard label must appear by itself as the first label. Hostname can be “precise” which is a domain name without the terminating dot of a network host (e.g. “foo.example.com”) or “wildcard”, which is a domain name prefixed with a single wildcard label (e.g. *.example.com). Note that as per RFC1035 and RFC1123, a label must consist of lower case alphanumeric characters or ‘-’, and must start and end with an alphanumeric character. No other punctuation is allowed. The routes associated with a Router must have unique hostnames. If you attempt to attach multiple routes with conflicting hostnames, the configuration will be rejected. For example, while it is acceptable for routes for the hostnames \"*.foo.bar.com\" and \"*.bar.com\" to be associated with the same route, it is not possible to associate two routes both with \"*.bar.com\" or both with \"bar.com\". In the case that multiple routes match the hostname, the most specific match will be selected. For example, \"foo.bar.baz.com\" will take precedence over \"*.bar.baz.com\" and \"*.bar.baz.com\" will take precedence over \"*.baz.com\". If a port is specified, then gRPC clients must use the channel URI with the port to match this rule (i.e. \"xds:///service:123\"), otherwise they must supply the URI without a port (i.e. \"xds:///service\").
    */
    'hostnames': Array<string>;
    /**
    * Optional. Set of label tags associated with the GrpcRoute resource.
    */
    'labels'?: { [key: string]: string; };
    /**
    * Immutable. The location for the resource
    */
    'location': string;
    'meshes'?: Array<ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecMeshesInner>;
    'projectRef': ComGoogleCloudCnrmBinaryauthorizationV1beta1BinaryAuthorizationAttestorSpecProjectRef;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    /**
    * Optional. Routers define a list of routers this GrpcRoute should be served by. Each router reference should match the pattern: `projects/_*_/locations/global/routers/`
    */
    'routers'?: Array<string>;
    /**
    * Required. A list of detailed rules defining how to route traffic. Within a single GrpcRoute, the GrpcRoute.RouteAction associated with the first matching GrpcRoute.RouteRule will be executed. At least one rule must be supplied.
    */
    'rules': Array<ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecRulesInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "gateways",
            "baseName": "gateways",
            "type": "Array<ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecGatewaysInner>"
        },
        {
            "name": "hostnames",
            "baseName": "hostnames",
            "type": "Array<string>"
        },
        {
            "name": "labels",
            "baseName": "labels",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "string"
        },
        {
            "name": "meshes",
            "baseName": "meshes",
            "type": "Array<ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecMeshesInner>"
        },
        {
            "name": "projectRef",
            "baseName": "projectRef",
            "type": "ComGoogleCloudCnrmBinaryauthorizationV1beta1BinaryAuthorizationAttestorSpecProjectRef"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "routers",
            "baseName": "routers",
            "type": "Array<string>"
        },
        {
            "name": "rules",
            "baseName": "rules",
            "type": "Array<ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpecRulesInner>"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmNetworkservicesV1beta1NetworkServicesGRPCRouteSpec.attributeTypeMap;
    }
}

