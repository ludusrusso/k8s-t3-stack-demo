/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecCorsInner } from './comGoogleCloudCnrmStorageV1beta1StorageBucketSpecCorsInner';
import { ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecEncryption } from './comGoogleCloudCnrmStorageV1beta1StorageBucketSpecEncryption';
import { ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecLifecycleRuleInner } from './comGoogleCloudCnrmStorageV1beta1StorageBucketSpecLifecycleRuleInner';
import { ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecLogging } from './comGoogleCloudCnrmStorageV1beta1StorageBucketSpecLogging';
import { ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecRetentionPolicy } from './comGoogleCloudCnrmStorageV1beta1StorageBucketSpecRetentionPolicy';
import { ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecVersioning } from './comGoogleCloudCnrmStorageV1beta1StorageBucketSpecVersioning';
import { ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecWebsite } from './comGoogleCloudCnrmStorageV1beta1StorageBucketSpecWebsite';

export class ComGoogleCloudCnrmStorageV1beta1StorageBucketSpec {
    /**
    * DEPRECATED. Please use the `uniformBucketLevelAccess` field as this field has been renamed by Google. The `uniformBucketLevelAccess` field will supersede this field. Enables Bucket PolicyOnly access to a bucket.
    */
    'bucketPolicyOnly'?: boolean;
    /**
    * The bucket\'s Cross-Origin Resource Sharing (CORS) configuration.
    */
    'cors'?: Array<ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecCorsInner>;
    /**
    * Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
    */
    'defaultEventBasedHold'?: boolean;
    'encryption'?: ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecEncryption;
    /**
    * The bucket\'s Lifecycle Rules configuration.
    */
    'lifecycleRule'?: Array<ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecLifecycleRuleInner>;
    /**
    * Immutable. The Google Cloud Storage location.
    */
    'location'?: string;
    'logging'?: ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecLogging;
    /**
    * Prevents public access to a bucket.
    */
    'publicAccessPrevention'?: string;
    /**
    * Enables Requester Pays on a storage bucket.
    */
    'requesterPays'?: boolean;
    /**
    * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    */
    'resourceID'?: string;
    'retentionPolicy'?: ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecRetentionPolicy;
    /**
    * The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    */
    'storageClass'?: string;
    /**
    * Enables uniform bucket-level access on a bucket.
    */
    'uniformBucketLevelAccess'?: boolean;
    'versioning'?: ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecVersioning;
    'website'?: ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecWebsite;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "bucketPolicyOnly",
            "baseName": "bucketPolicyOnly",
            "type": "boolean"
        },
        {
            "name": "cors",
            "baseName": "cors",
            "type": "Array<ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecCorsInner>"
        },
        {
            "name": "defaultEventBasedHold",
            "baseName": "defaultEventBasedHold",
            "type": "boolean"
        },
        {
            "name": "encryption",
            "baseName": "encryption",
            "type": "ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecEncryption"
        },
        {
            "name": "lifecycleRule",
            "baseName": "lifecycleRule",
            "type": "Array<ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecLifecycleRuleInner>"
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "string"
        },
        {
            "name": "logging",
            "baseName": "logging",
            "type": "ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecLogging"
        },
        {
            "name": "publicAccessPrevention",
            "baseName": "publicAccessPrevention",
            "type": "string"
        },
        {
            "name": "requesterPays",
            "baseName": "requesterPays",
            "type": "boolean"
        },
        {
            "name": "resourceID",
            "baseName": "resourceID",
            "type": "string"
        },
        {
            "name": "retentionPolicy",
            "baseName": "retentionPolicy",
            "type": "ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecRetentionPolicy"
        },
        {
            "name": "storageClass",
            "baseName": "storageClass",
            "type": "string"
        },
        {
            "name": "uniformBucketLevelAccess",
            "baseName": "uniformBucketLevelAccess",
            "type": "boolean"
        },
        {
            "name": "versioning",
            "baseName": "versioning",
            "type": "ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecVersioning"
        },
        {
            "name": "website",
            "baseName": "website",
            "type": "ComGoogleCloudCnrmStorageV1beta1StorageBucketSpecWebsite"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmStorageV1beta1StorageBucketSpec.attributeTypeMap;
    }
}

