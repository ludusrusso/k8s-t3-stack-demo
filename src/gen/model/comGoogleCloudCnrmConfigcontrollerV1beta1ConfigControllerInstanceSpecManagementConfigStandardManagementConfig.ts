/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGoogleCloudCnrmConfigcontrollerV1beta1ConfigControllerInstanceSpecManagementConfigStandardManagementConfigNetworkRef } from './comGoogleCloudCnrmConfigcontrollerV1beta1ConfigControllerInstanceSpecManagementConfigStandardManagementConfigNetworkRef';

/**
* Immutable. Configuration of the standard (GKE) cluster management
*/
export class ComGoogleCloudCnrmConfigcontrollerV1beta1ConfigControllerInstanceSpecManagementConfigStandardManagementConfig {
    /**
    * Immutable. The IP address range for the cluster pod IPs. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
    */
    'clusterCidrBlock'?: string;
    /**
    * Immutable. The name of the existing secondary range in the cluster\'s subnetwork to use for pod IP addresses. Alternatively, cluster_cidr_block can be used to automatically create a GKE-managed one.
    */
    'clusterNamedRange'?: string;
    /**
    * Immutable. Master Authorized Network. Allows access to the k8s master from this block.
    */
    'manBlock'?: string;
    /**
    * Immutable. The /28 network that the masters will use.
    */
    'masterIPv4CidrBlock': string;
    'networkRef'?: ComGoogleCloudCnrmConfigcontrollerV1beta1ConfigControllerInstanceSpecManagementConfigStandardManagementConfigNetworkRef;
    /**
    * Immutable. The IP address range for the cluster service IPs. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
    */
    'servicesCidrBlock'?: string;
    /**
    * Immutable. The name of the existing secondary range in the cluster\'s subnetwork to use for service ClusterIPs. Alternatively, services_cidr_block can be used to automatically create a GKE-managed one.
    */
    'servicesNamedRange'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "clusterCidrBlock",
            "baseName": "clusterCidrBlock",
            "type": "string"
        },
        {
            "name": "clusterNamedRange",
            "baseName": "clusterNamedRange",
            "type": "string"
        },
        {
            "name": "manBlock",
            "baseName": "manBlock",
            "type": "string"
        },
        {
            "name": "masterIPv4CidrBlock",
            "baseName": "masterIPv4CidrBlock",
            "type": "string"
        },
        {
            "name": "networkRef",
            "baseName": "networkRef",
            "type": "ComGoogleCloudCnrmConfigcontrollerV1beta1ConfigControllerInstanceSpecManagementConfigStandardManagementConfigNetworkRef"
        },
        {
            "name": "servicesCidrBlock",
            "baseName": "servicesCidrBlock",
            "type": "string"
        },
        {
            "name": "servicesNamedRange",
            "baseName": "servicesNamedRange",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ComGoogleCloudCnrmConfigcontrollerV1beta1ConfigControllerInstanceSpecManagementConfigStandardManagementConfig.attributeTypeMap;
    }
}

