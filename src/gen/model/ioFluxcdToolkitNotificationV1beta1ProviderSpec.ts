/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoFluxcdToolkitNotificationV1beta1ProviderSpecCertSecretRef } from './ioFluxcdToolkitNotificationV1beta1ProviderSpecCertSecretRef';
import { IoFluxcdToolkitNotificationV1beta1ProviderSpecSecretRef } from './ioFluxcdToolkitNotificationV1beta1ProviderSpecSecretRef';

/**
* ProviderSpec defines the desired state of Provider
*/
export class IoFluxcdToolkitNotificationV1beta1ProviderSpec {
    /**
    * HTTP/S webhook address of this provider
    */
    'address'?: string;
    'certSecretRef'?: IoFluxcdToolkitNotificationV1beta1ProviderSpecCertSecretRef;
    /**
    * Alert channel for this provider
    */
    'channel'?: string;
    /**
    * HTTP/S address of the proxy
    */
    'proxy'?: string;
    'secretRef'?: IoFluxcdToolkitNotificationV1beta1ProviderSpecSecretRef;
    /**
    * This flag tells the controller to suspend subsequent events handling. Defaults to false.
    */
    'suspend'?: boolean;
    /**
    * Type of provider
    */
    'type': IoFluxcdToolkitNotificationV1beta1ProviderSpec.TypeEnum;
    /**
    * Bot username for this provider
    */
    'username'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "string"
        },
        {
            "name": "certSecretRef",
            "baseName": "certSecretRef",
            "type": "IoFluxcdToolkitNotificationV1beta1ProviderSpecCertSecretRef"
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "string"
        },
        {
            "name": "proxy",
            "baseName": "proxy",
            "type": "string"
        },
        {
            "name": "secretRef",
            "baseName": "secretRef",
            "type": "IoFluxcdToolkitNotificationV1beta1ProviderSpecSecretRef"
        },
        {
            "name": "suspend",
            "baseName": "suspend",
            "type": "boolean"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "IoFluxcdToolkitNotificationV1beta1ProviderSpec.TypeEnum"
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IoFluxcdToolkitNotificationV1beta1ProviderSpec.attributeTypeMap;
    }
}

export namespace IoFluxcdToolkitNotificationV1beta1ProviderSpec {
    export enum TypeEnum {
        Slack = <any> 'slack',
        Discord = <any> 'discord',
        Msteams = <any> 'msteams',
        Rocket = <any> 'rocket',
        Generic = <any> 'generic',
        Github = <any> 'github',
        Gitlab = <any> 'gitlab',
        Bitbucket = <any> 'bitbucket',
        Azuredevops = <any> 'azuredevops',
        Googlechat = <any> 'googlechat',
        Webex = <any> 'webex',
        Sentry = <any> 'sentry',
        Azureeventhub = <any> 'azureeventhub',
        Telegram = <any> 'telegram',
        Lark = <any> 'lark',
        Matrix = <any> 'matrix',
        Opsgenie = <any> 'opsgenie',
        Alertmanager = <any> 'alertmanager',
        Grafana = <any> 'grafana'
    }
}
